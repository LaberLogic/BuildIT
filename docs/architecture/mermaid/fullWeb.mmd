C4Container
title Level 3 - Frontend Application (Nuxt)



Container_Boundary(frontend, "Frontend (Nuxt)") {

  Container_Boundary(pages, "Pages") {
    Container(pageLogin, "/auth/login.vue", "Page", "Login page")
    Container(pageRegister, "/auth/register.vue", "Page", "Register page")
    Container(pageCompany, "/company/index.vue", "Page", "Company overview page")
    Container(pageCompanyId, "/company/[companyId]/index.vue", "Page", "Company detail page")
    Container(pageCompanyUsers, "/company/[companyId]/users/index.vue", "Page", "Company users page")
    Container(pageCompanySites, "/company/[companyId]/sites/index.vue", "Page", "Company sites page")
    Container(pageSiteId, "/company/[companyId]/sites/[siteId]/index.vue", "Page", "Site detail page")
    Container(pageProfile, "/profile.vue", "Page", "User profile page")
    Container(pageReset, "/reset-password.vue", "Page", "Password reset page")
    Container(pageSet, "/set-password.vue", "Page", "Set password page")
    Container(pageIndex, "/index.vue", "Page", "Home page")
  }

  Container_Boundary(components, "Components") {

    Container_Boundary(auth, "Auth Components") {
      Container(headerWithIcon, "HeaderWithIcon.vue", "Component", "Header with icon")
      Container(loginForm, "LoginForm.vue", "Component", "Login form")
      Container(registerUserForm, "RegisterUserForm.vue", "Component", "User registration form")
      Container(registerCompanyForm, "RegisterCompanyForm.vue", "Component", "Company registration form")
    }

    Container_Boundary(company, "Company Components") {
      Container(overviewCard, "OverviewCard.vue", "Component", "Company overview card")
      Container(companyDetailsCard, "CompanyDetailsCard.vue", "Component", "Company details card")
    }

    Container_Boundary(users, "Users Components") {
      Container(userStatistics, "UserStatistics.vue", "Component", "User statistics")
      Container(userDashboardActions, "UserDashboardActions.vue", "Component", "Dashboard actions")
      Container(userCard, "UserCard.vue", "Component", "User card")
      Container(createUpdateUserModal, "modals/CreateUpdateUser.vue", "Component", "User create/update modal")
    }

    Container_Boundary(site, "Site Components") {
      Container(basicInfo, "BasicInfo.vue", "Component", "Site basic info")
      Container(tabs, "Tabs.vue", "Component", "Site tabs")
      Container(siteCard, "SiteCard.vue", "Component", "Site card")
      Container(createUpdateSiteModal, "modals/CreateUpdateSite.vue", "Component", "Site create/update modal")
      Container(materialCard, "MaterialCard.vue", "Component", "Material card")
      Container(materialTracker, "MaterialTracker.vue", "Component", "Material tracker")
      Container(timeTracker, "TimeTracker.vue", "Component", "Time tracker")
      Container(siteDetailsCard, "SiteDetailsCard.vue", "Component", "Site details card")
      Container(createUpdateMaterialModal, "modals/CreateUpdateMaterial.vue", "Component", "Material create/update modal")
    }

    Container_Boundary(general, "General Components") {
      Container(confirmAction, "ConfirmAction.vue", "Component", "Confirm action modal")
    }

  }
}

Rel(pageLogin, headerWithIcon, "Uses")
Rel(pageLogin, loginForm, "Uses")
Rel(pageRegister, headerWithIcon, "Uses")
Rel(pageRegister, registerUserForm, "Uses")
Rel(pageRegister, registerCompanyForm, "Uses")
Rel(pageCompany, overviewCard, "Uses")
Rel(pageCompanyId, companyDetailsCard, "Uses")
Rel(pageCompanyUsers, userStatistics, "Uses")
Rel(pageCompanyUsers, userDashboardActions, "Uses")
Rel(pageCompanyUsers, userCard, "Uses")
Rel(pageCompanySites, siteCard, "Uses")
Rel(pageCompanySites, createUpdateSiteModal, "Uses")
Rel(userCard, createUpdateUserModal, "Uses")
Rel(pageSiteId, basicInfo, "Uses")
Rel(pageSiteId, tabs, "Uses")
Rel(pageProfile, createUpdateUserModal, "Uses")
Rel(pageReset, headerWithIcon, "Uses")
Rel(pageSet, headerWithIcon, "Uses")

Rel(tabs, timeTracker, "Uses")
Rel(tabs, materialTracker, "Uses")
Rel(tabs, siteDetailsCard, "Uses")
Rel(materialTracker, materialCard, "Uses")
Rel(materialTracker, createUpdateMaterialModal, "Uses")
Rel(materialCard, confirmAction, "Uses")
Rel(userCard, confirmAction, "Uses")
